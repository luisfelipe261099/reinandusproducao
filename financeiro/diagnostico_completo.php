<?php
/**
 * Verifica√ß√£o Completa do M√≥dulo Financeiro
 * 
 * Este script verifica se o m√≥dulo financeiro est√° devidamente configurado
 * e faz diagn√≥sticos detalhados dos poss√≠veis problemas.
 */

require_once __DIR__ . '/../includes/init.php';
require_once __DIR__ . '/../includes/Database.php';

$db = Database::getInstance();

echo "=== DIAGN√ìSTICO COMPLETO DO M√ìDULO FINANCEIRO ===\n\n";

$problemas = [];
$sucessos = [];

// 1. Verificar se a tabela boletos existe
echo "1. Verificando exist√™ncia da tabela 'boletos':\n";
try {
    $tableExists = $db->fetchOne("SHOW TABLES LIKE 'boletos'");
    if ($tableExists) {
        $sucessos[] = "‚úì Tabela 'boletos' existe";
        echo "   ‚úì Tabela 'boletos' existe\n";
        
        // Verificar estrutura da tabela
        $columns = $db->fetchAll("SHOW COLUMNS FROM boletos");
        $colunas_encontradas = array_column($columns, 'Field');
        
        // Colunas obrigat√≥rias da nova estrutura
        $colunas_necessarias = ['tipo', 'referencia_id', 'ambiente', 'banco', 'carteira'];
        $colunas_faltando = array_diff($colunas_necessarias, $colunas_encontradas);
        
        if (empty($colunas_faltando)) {
            $sucessos[] = "‚úì Estrutura da tabela 'boletos' est√° atualizada";
            echo "   ‚úì Estrutura da tabela est√° atualizada\n";
        } else {
            $problemas[] = "‚ùå Estrutura da tabela 'boletos' est√° desatualizada";
            echo "   ‚ùå Colunas faltando: " . implode(', ', $colunas_faltando) . "\n";
            echo "   ‚û§ Execute o script: sql/migrar_boletos_compatibilidade.sql\n";
        }
        
        // Verificar se tem dados
        $count = $db->fetchOne("SELECT COUNT(*) as total FROM boletos");
        echo "   üìä Total de boletos: " . $count['total'] . "\n";
        
    } else {
        $problemas[] = "‚ùå Tabela 'boletos' n√£o existe";
        echo "   ‚ùå Tabela 'boletos' n√£o existe\n";
        echo "   ‚û§ Execute o script: sql/setup_modulo_financeiro.sql\n";
    }
} catch (Exception $e) {
    $problemas[] = "‚ùå Erro ao verificar tabela 'boletos': " . $e->getMessage();
    echo "   ‚ùå Erro: " . $e->getMessage() . "\n";
}

echo "\n";

// 2. Verificar tabela de configura√ß√µes financeiras
echo "2. Verificando tabela 'configuracoes_financeiras':\n";
try {
    $tableExists = $db->fetchOne("SHOW TABLES LIKE 'configuracoes_financeiras'");
    if ($tableExists) {
        $sucessos[] = "‚úì Tabela 'configuracoes_financeiras' existe";
        echo "   ‚úì Tabela 'configuracoes_financeiras' existe\n";
        
        // Verificar se tem configura√ß√µes b√°sicas
        $config = $db->fetchOne("SELECT COUNT(*) as total FROM configuracoes_financeiras WHERE chave = 'modulo_ativo'");
        if ($config && $config['total'] > 0) {
            $modulo_ativo = $db->fetchOne("SELECT valor FROM configuracoes_financeiras WHERE chave = 'modulo_ativo'");
            if ($modulo_ativo && $modulo_ativo['valor'] == '1') {
                $sucessos[] = "‚úì M√≥dulo financeiro est√° ativado";
                echo "   ‚úì M√≥dulo financeiro est√° ativado\n";
            } else {
                $problemas[] = "‚ö†Ô∏è M√≥dulo financeiro est√° desativado";
                echo "   ‚ö†Ô∏è M√≥dulo financeiro est√° desativado\n";
            }
        } else {
            $problemas[] = "‚ùå Configura√ß√µes b√°sicas n√£o encontradas";
            echo "   ‚ùå Configura√ß√µes b√°sicas n√£o encontradas\n";
            echo "   ‚û§ Execute o script: sql/setup_modulo_financeiro.sql\n";
        }
        
        // Listar todas as configura√ß√µes
        $configs = $db->fetchAll("SELECT chave, valor, grupo FROM configuracoes_financeiras ORDER BY grupo, chave");
        echo "   üìã Configura√ß√µes encontradas:\n";
        foreach ($configs as $cfg) {
            echo "      - {$cfg['chave']} = {$cfg['valor']} ({$cfg['grupo']})\n";
        }
        
    } else {
        $problemas[] = "‚ùå Tabela 'configuracoes_financeiras' n√£o existe";
        echo "   ‚ùå Tabela 'configuracoes_financeiras' n√£o existe\n";
        echo "   ‚û§ Execute o script: sql/setup_modulo_financeiro.sql\n";
    }
} catch (Exception $e) {
    $problemas[] = "‚ùå Erro ao verificar configura√ß√µes: " . $e->getMessage();
    echo "   ‚ùå Erro: " . $e->getMessage() . "\n";
}

echo "\n";

// 3. Verificar outras tabelas do m√≥dulo financeiro
echo "3. Verificando outras tabelas do m√≥dulo financeiro:\n";
$tabelas_financeiras = [
    'categorias_financeiras' => 'Categorias de receitas e despesas',
    'contas_bancarias' => 'Contas banc√°rias',
    'funcionarios' => 'Cadastro de funcion√°rios',
    'contas_pagar' => 'Contas a pagar',
    'contas_receber' => 'Contas a receber',
    'transacoes_financeiras' => 'Transa√ß√µes financeiras',
    'folha_pagamento' => 'Folha de pagamento',
    'mensalidades_alunos' => 'Mensalidades de alunos',
    'cobranca_polos' => 'Cobran√ßa de polos'
];

foreach ($tabelas_financeiras as $tabela => $descricao) {
    try {
        $exists = $db->fetchOne("SHOW TABLES LIKE '$tabela'");
        if ($exists) {
            $count = $db->fetchOne("SELECT COUNT(*) as total FROM $tabela");
            $sucessos[] = "‚úì Tabela '$tabela' existe";
            echo "   ‚úì $descricao: " . $count['total'] . " registros\n";
        } else {
            $problemas[] = "‚ö†Ô∏è Tabela '$tabela' n√£o existe";
            echo "   ‚ö†Ô∏è $descricao: tabela n√£o existe\n";
        }
    } catch (Exception $e) {
        $problemas[] = "‚ùå Erro ao verificar '$tabela': " . $e->getMessage();
        echo "   ‚ùå Erro ao verificar '$tabela': " . $e->getMessage() . "\n";
    }
}

echo "\n";

// 4. Verificar compatibilidade do c√≥digo boletos.php
echo "4. Verificando compatibilidade do c√≥digo:\n";
try {
    // Testar a query que o boletos.php usa
    $sql = "SELECT b.*,
               CASE
                   WHEN b.tipo = 'mensalidade' THEN a.nome
                   WHEN b.tipo = 'polo' THEN p.nome
                   ELSE b.nome_pagador
               END as pagador_nome
        FROM boletos b
        LEFT JOIN alunos a ON b.tipo = 'mensalidade' AND b.referencia_id = a.id
        LEFT JOIN polos p ON b.tipo = 'polo' AND b.referencia_id = p.id
        ORDER BY b.created_at DESC
        LIMIT 1";
    
    $teste = $db->fetchOne($sql);
    $sucessos[] = "‚úì Query do boletos.php est√° funcionando";
    echo "   ‚úì Query do boletos.php est√° funcionando\n";
    
} catch (Exception $e) {
    $problemas[] = "‚ùå Query do boletos.php falhou: " . $e->getMessage();
    echo "   ‚ùå Query do boletos.php falhou: " . $e->getMessage() . "\n";
    echo "   ‚û§ Problema na estrutura da tabela boletos\n";
}

echo "\n";

// 5. RESUMO FINAL
echo "=== RESUMO FINAL ===\n\n";

if (empty($problemas)) {
    echo "üéâ M√ìDULO FINANCEIRO EST√Å 100% FUNCIONAL!\n";
    echo "Todos os testes passaram com sucesso.\n\n";
} else {
    echo "‚ö†Ô∏è PROBLEMAS ENCONTRADOS:\n";
    foreach ($problemas as $problema) {
        echo "$problema\n";
    }
    echo "\n";
}

echo "‚úÖ SUCESSOS:\n";
foreach ($sucessos as $sucesso) {
    echo "$sucesso\n";
}

echo "\n";

// 6. RECOMENDA√á√ïES
echo "=== RECOMENDA√á√ïES ===\n\n";

if (in_array("‚ùå Estrutura da tabela 'boletos' est√° desatualizada", $problemas)) {
    echo "üîß A√á√ÉO PRIORIT√ÅRIA:\n";
    echo "1. Execute o script: sql/migrar_boletos_compatibilidade.sql\n";
    echo "   Este script migra a estrutura atual da tabela boletos para a nova estrutura.\n\n";
}

if (in_array("‚ùå Tabela 'configuracoes_financeiras' n√£o existe", $problemas)) {
    echo "üîß A√á√ÉO NECESS√ÅRIA:\n";
    echo "1. Execute o script: sql/setup_modulo_financeiro.sql\n";
    echo "   Este script cria todas as tabelas necess√°rias do m√≥dulo financeiro.\n\n";
}

if (empty($problemas)) {
    echo "‚ú® O m√≥dulo financeiro est√° pronto para uso!\n";
    echo "Voc√™ pode acessar: financeiro/boletos.php\n";
}

echo "\n=== FIM DO DIAGN√ìSTICO ===\n";
